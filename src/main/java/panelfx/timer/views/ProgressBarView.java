/*
 * DigitalClockView.java
 * Created on 17. September 2005, 02:12
 */

package panelfx.timer.views;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.text.NumberFormat;

import panelfx.timer.ClockView;

/**
 * View for a clock. looking "digital"
 * 
 * @author ohlsen
 */
public class ProgressBarView extends javax.swing.JPanel implements ClockView {

    private int secondsTotal = 0;
    private int secondsLeft = 0;
    private NumberFormat secFormat = NumberFormat.getInstance();

    /** Creates new form DigitalClockView */
    public ProgressBarView() {

        this.setBackground(new Color(245, 245, 245));
        this.initComponents();

        /* Set "Digital looking" font */
        final Font font = new Font("Arial", Font.BOLD, 40);
        this.setFont(font);

        this.secFormat.setMinimumIntegerDigits(2);
    }

    public void tick(final int secsLeft) {

        this.setSecondsLeft(secsLeft);
        this.repaint();
    }

    public void setTotalTime(final int seconds) {

        this.setSecondsTotal(seconds);
        this.setSecondsLeft(seconds);
    }

    @Override
    public void paintComponent(final Graphics g) {

        super.paintComponent(g);
        final Graphics2D g2d = (Graphics2D) g;

        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

        final int minutes = this.getSecondsLeft() / 60;
        final int seconds = this.getSecondsLeft() % 60;

        final double progressD = (149.0 / this.getSecondsTotal()) * (this.getSecondsTotal() - this.getSecondsLeft());
        final int progress = (int) Math.round(progressD);

        g2d.setColor(new Color(210, 210, 210));
        g2d.fillRoundRect(9, 80, progress, 15, 4, 4);
        g2d.setColor(Color.darkGray);
        g2d.drawRoundRect(9, 80, 149, 15, 4, 4);
    }

    public int getSecondsTotal() {
        return this.secondsTotal;
    }

    public void setSecondsTotal(final int secondsTotal) {
        this.secondsTotal = secondsTotal;
    }

    public int getSecondsLeft() {
        return this.secondsLeft;
    }

    public void setSecondsLeft(final int secondsLeft) {
        this.secondsLeft = secondsLeft;
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents

        this.setLayout(new java.awt.BorderLayout());

    }//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
